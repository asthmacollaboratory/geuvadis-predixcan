##------ [/netapp/home/kkeys/gala_sage/rnaseq/glmnet/elasticnet/crosspop/crosspop_results] Mon Nov 26 10:05:08 2018 ------##
source("dunn_testing.Rhistory")
ls()
allpop.sub
kruskal.test(R2 ~ as.factor(EUR_AFR), data = allpop.sub)
 kruskal.test(R2 ~ as.factor(Train_Test), data = allpop.sub)
dunn.test(x = allpop.sub$R2, g = allpop.sub$EUR_AFR,    method = "bh")
allpop.sub$R2
allpop.sub$EUR_AFR
dunn.test(x = allpop.sub$R2, g = as.factor(allpop.sub$EUR_AFR),    method = "bh")
any(is.na(all.sub))
any(is.na(allpop.sub))
allpop.sub
dunn.test(x = allpop.sub$Correlation, g = as.factor(allpop.sub$EUR_AFR),    method = "bh")
?dunn.test
?dunn.test
lapply(allpop.sub, class)
dunn.test(x = allpop.sub$Correlation[1:5], g = as.factor(allpop.sub$EUR_AFR)[1:5],    method = "bh")
dunn.test(x = allpop.sub$Correlation[1:5], g = as.factor(allpop.sub$EUR_AFR[1:5]),    method = "bh")
dim(allpop.sub)
dunn.test(x = allpop.sub$Correlation[1:5], g = allpop.sub$EUR_AFR[1:5],    method = "bh")
dunn.test(x = c(1:10), g = sample(x=c(0,1), size = 10, replace = T))
length(allpop.sub$EUR_AFR)
length(allpop.sub$Correlation)
table(allpop.sub$EUR_AFR)
dunn.test(x = c(1:10), g = sample(x=c(0,1), size = 10, replace = T), method = "bh")
dunn.test(x = c(1:10), g = sample(x=c(0,1), size = 10, replace = T), method = "bf")
dunn.test(x = c(1:10), g = sample(x=c(0,1), size = 10, replace = T), method = "bonferroni")
dunn.test(x = allpop.sub$Correlation[1:5], g = allpop.sub$EUR_AFR[1:5],    method = "bonferroni")
dunn.test(x = allpop.sub$Correlation, g = allpop.sub$EUR_AFR,    method = "bonferroni")
kruskal.test(Correlation ~ as.factor(EUR_AFR), data = allpop.sub)
my.kw = kruskal.test(Correlation ~ as.factor(EUR_AFR), data = allpop.sub)
my.kw$p.value
kruskal.test(Correlation ~ as.factor(Train_Test), data = allpop.sub)
dunn.test(x = allpop.sub$Correlation, g = allpop.sub$Train_Test, method = "bh")
dunn.test(x = allpop.sub$Correlation, g = allpop.sub$Train_Pop, method = "bh")
allpop.sub = allpop %>% 
    dplyr::filter(Train_Pop != Test_Pop) %>% 
    mutate(
        Train_Test = paste(Train_Pop, Test_Pop, sep = "_"),
        #EUR_AFR = ifelse(Train_Pop == "YRI" | Test_Pop == "YRI", "AFR", "EUR")
        EUR_AFR = paste(ifelse(Train_Pop == "YRI" , "AFR", "EUR"), ifelse(Test_pop == "YRI", "AFR", "EUR", sep = "_"))
    ) %>% 
    as.data.table
allpop.sub = allpop %>% 
    dplyr::filter(Train_Pop != Test_Pop) %>% 
    mutate(
        Train_Test = paste(Train_Pop, Test_Pop, sep = "_"),
        #EUR_AFR = ifelse(Train_Pop == "YRI" | Test_Pop == "YRI", "AFR", "EUR")
        EUR_AFR = paste(ifelse(Train_Pop == "YRI" , "AFR", "EUR"), ifelse(Test_pop == "YRI", "AFR", "EUR"), sep = "_")
    ) %>% 
    as.data.table
# Train_Test includes the *training* population, followed by the *testing* population
allpop.sub = allpop %>% 
    dplyr::filter(Train_Pop != Test_Pop) %>% 
    mutate(
        Train_Test = paste(Train_Pop, Test_Pop, sep = "_"),
        #EUR_AFR = ifelse(Train_Pop == "YRI" | Test_Pop == "YRI", "AFR", "EUR")
        EUR_AFR = paste(ifelse(Train_Pop == "YRI" , "AFR", "EUR"), ifelse(Test_Pop == "YRI", "AFR", "EUR"), sep = "_")
    ) %>% 
    as.data.table
allpop.sub
dunn.test(x = allpop.sub$Correlation, g = allpop.sub$EUR_AFR, method = "bonferroni")
table(allpop.sub$EUR_AFR)
table(allpop.sub$Test_Pop)
table(allpop.sub$Train_Pop)
allpop.sub = allpop %>% 
    mutate(
        Train_Test = paste(Train_Pop, Test_Pop, sep = "_"),
        #EUR_AFR = ifelse(Train_Pop == "YRI" | Test_Pop == "YRI", "AFR", "EUR")
        EUR_AFR = paste(ifelse(Train_Pop == "YRI" , "AFR", "EUR"), ifelse(Test_Pop == "YRI", "AFR", "EUR"), sep = "_")
    ) %>% 
    as.data.table
table(allpop.sub$EUR_AFR)
allpop.sub
dunn.test(x = allpop.sub$R2, g = allpop.sub$EUR_AFR, method = "bonferroni")
dunn.test(x = allpop.sub$R2, g = allpop.sub$Train_Pop, method = "bonferroni")
dunn.test(x = allpop.sub$R2, g = allpop.sub$Test_Pop, method = "bonferroni")
table(allpop.sub$Train_Pop)
table(allpop.sub$Test_Pop)
allpop.sub = allpop %>% 
    dplyr::filter(Train_Pop != Test_Pop) %>%
    mutate(
        Train_Test = paste(Train_Pop, Test_Pop, sep = "_"),
        #EUR_AFR = ifelse(Train_Pop == "YRI" | Test_Pop == "YRI", "AFR", "EUR")
        EUR_AFR = paste(ifelse(Train_Pop == "YRI" , "AFR", "EUR"), ifelse(Test_Pop == "YRI", "AFR", "EUR"), sep = "_")
    ) %>% 
    as.data.table
dunn.test(x = allpop.sub$R2, g = allpop.sub$Test_Pop, method = "bonferroni")
dunn.test(x = allpop.sub$R2, g = allpop.sub$Train_Pop, method = "bonferroni")
?dunn.test
r2.by.trainpop = dunn.test(x = allpop.sub$R2, g = allpop.sub$Train_Pop, method = "bonferroni")
r2.by.trainpop$P
r2.by.trainpop$Z
r2.by.trainpop$comparisons
dunn.test(x = allpop.sub$R2, g = allpop.sub$EUR_AFR, method = "bonferroni")
r2.by.eurafr = dunn.test(x = allpop.sub$R2, g = allpop.sub$EUR_AFR, method = "bonferroni")
r2.by.eurafr$P.adjusted
savehistory("dunn_testing2.Rhistory")
